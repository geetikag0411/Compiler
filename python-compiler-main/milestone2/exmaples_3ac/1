Person.class
constructor
move8 this 0(rbp)
move16 0(rbp) name
move12 8(rbp) age
this.name = name
this.age = age
endconstructor

func sayHello
move8 rbp -8(rsp)   -> 
rbp = rsp
sub rsp, $56
move48 regs -56(rbp)
t2 = Hello, my name is 
t3 = t2 + name
t4 = .
t5 = t3 + t4
sub rsp, $8
move8 ra (rsp)
sub rsp, $8
move8 t5 -72(rbp)
call System.out.println
reclaim return value
add rsp, $8
move8 (rsp) ra
add rsp, $8
nop
move48 -56(rbp) regs
move8 rbp rsp
move8 -8(rbp) rbp
move8 RRE -8(rsp)
sub rsp, $8
ret



func sayAge
move8 rbp -8(rsp)
rbp = rsp
sub rsp, $56
move48 regs -56(rbp)
t7 = I am 
t8 = t7 + age
t9 =  years old.
t10 = t8 + t9
sub rsp, $8
move8 ra (rsp)
sub rsp, $8
move8 t10 -72(rbp)
call System.out.println
reclaim return value
add rsp, $8
move8 (rsp) ra
add rsp, $8
nop
move48 -56(rbp) regs
move8 rbp rsp
move8 -8(rbp) rbp
move8 RRE -8(rsp)
sub rsp, $8
ret
endfunc

endclass
test_9.class
func main
move8 rbp -8(rsp)
rbp = rsp
sub rsp, $72
move48 regs -56(rbp)
call allocmem 12$
t14 = RRE 
move8 t14 -8(rbp)
t12 = Alice
t13 = 25
call Person.constructor
person1 = t14
call person1.sayHello
call person1.sayAge
call allocmem 12$
t20 = RRE 
move8 t20 -8(rbp)
t18 = Bob
t19 = 30
call Person.constructor
person2 = t20
call person2.sayHello
call person2.sayAge
nop
move48 -56(rbp) regs
move8 rbp rsp
move8 -8(rbp) rbp
move8 RRE -8(rsp)
sub rsp, $8
ret
endfunc
endclass
